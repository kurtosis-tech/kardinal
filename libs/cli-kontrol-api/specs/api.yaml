openapi: 3.0.0

info:
  title: CLI/Kontrol API
  version: 1.0.0

paths:
  /health:
    description: For health check control
    get:
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: string

  /tenant/{uuid}/flow/create:
    post:
      parameters:
        - $ref: "#/components/parameters/uuid"
      requestBody:
        description: Create a dev flow
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DevFlowSpec"
      responses:
        "200":
          description: Dev flow creation status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevFlow"

  /tenant/{uuid}/flows:
    get:
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "200":
          description: Dev flow creation status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DevFlow"

  /tenant/{uuid}/flow/{flow-id}/delete:
    post:
      parameters:
        - $ref: "#/components/parameters/uuid"
        - $ref: "#/components/parameters/flow-id"
      requestBody:
        description: Delete dev flow (revert back to prod only)
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdFlowSpec"
      responses:
        "200":
          description: Dev flow creation status
          content:
            application/json:
              schema:
                type: string

  /tenant/{uuid}/deploy:
    post:
      parameters:
        - $ref: "#/components/parameters/uuid"
      requestBody:
        description: Deploy a prod only cluster
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdFlowSpec"
      responses:
        "200":
          description: Dev flow creation status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevFlow"

  /tenant/{uuid}/topology:
    get:
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "200":
          description: Topology information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterTopology"

components:
  parameters:
    uuid:
      name: uuid
      in: path
      required: true
      description: UUID of the resource
      schema:
        type: string

    flow-id:
      name: flow-id
      in: path
      required: true
      description: Flow identifier
      schema:
        type: string

  schemas:
    ProdFlowSpec:
      type: object
      properties:
        service-configs:
          type: array
          items:
            $ref: "#/components/schemas/ServiceConfig"

    DevFlow:
      type: object
      properties:
        dev-flow-id:
          type: string

    DevFlowSpec:
      type: object
      properties:
        image-locator:
          type: string
          example: backend-a:latest
        service-name:
          type: string
          example: backend-service-a
        service-configs:
          type: array
          items:
            $ref: "#/components/schemas/ServiceConfig"

    Node:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the node.
        label:
          type: string
          description: Label for the node.
        type:
          type: string
          enum: [gateway, service, service-version, redis]
          description: Type of the node
        parent:
          type: string
          description: Parent node
      required:
        - id
        - type

    Edge:
      type: object
      properties:
        source:
          type: string
          description: The identifier of the source node of the edge.
        target:
          type: string
          description: The identifier of the target node of the edge.
        label:
          type: string
          description: Label for the edge.
      required:
        - source
        - target

    ClusterTopology:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/Node"
        edges:
          type: array
          items:
            $ref: "#/components/schemas/Edge"
      required:
        - nodes
        - edges

    ServiceConfig:
      type: object
      properties:
        service:
          x-go-type: corev1.Service
          x-go-type-import:
            path: k8s.io/api/core/v1
            name: corev1
        deployment:
          x-go-type: appv1.Deployment
          x-go-type-import:
            path: k8s.io/api/apps/v1
            name: appv1
      required:
        - service
        - deployment
